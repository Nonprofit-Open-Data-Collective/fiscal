% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get-eidr.R
\name{get_eidr}
\alias{get_eidr}
\title{Earned Income Dependence Ratio}
\usage{
get_eidr( df, 
prog.service.rev = "F9_08_REV_PROG_TOT_TOT", 
memb.dues = "F9_08_REV_CONTR_MEMBSHIP_DUE", 
royalties = "F9_08_REV_OTH_ROY_TOT", 
other.revenue = "F9_08_REV_MISC_OTH_TOT", 
total.revenue = "F9_08_REV_TOT_TOT", 
numerator = NULL,
denominator = NULL,
winsorize = 0.98 )
}
\arguments{
\item{df}{A \code{data.frame} containing the required field for computing the metric. The metric will be appended to this dataset.}

\item{prog.service.rev}{A character string indicating the column name for program service revenue (On 990: Part VIII, Line 2g(A); On EZ: Not Available).}

\item{memb.dues}{A character string indicating the column name for membership dues (On 990: Part VIII, Line 1b(A); On EZ: Not Available).}

\item{royalties}{A character string indicating the column name for royalties (On 990: Part VIII, Line 5(A); On EZ: Not Available).}

\item{other.revenue}{A character string indicating the column name for all other revenue (On 990: Part VIII, Line 11d(A); On EZ: Not Available).}

\item{total.revenue}{A character string indicating the column name for total revenue (On 990: (Part VIII, Line 12A); On EZ: Part I, Line 9).}

\item{numerator}{A character string indicating the user-supplied column name for a pre-aggregated variable for the numerator. Do not combine with numerator column component arguments (\code{prog.service.rev}, \code{memb.dues},\code{royalties}, \code{other.revenue}).}

\item{denominator}{A character string indicating the user-supplied column name for a pre-aggregated variable for the denominator. Do not combine with denominator column component arguments (\code{total.revenue}).}

\item{winsorize}{The winsorization value (between 0 and 1), defaults to 0.98 which winsorizes at 99th and 1st percentile values.}
}
\value{
Object of class \code{data.frame}: the original dataframe appended with the earned income dependence ratio (\code{eidr}),
a winsorized vermemb.dueson (\code{eidr.w}), a standardized z-score vermemb.dueson (\code{eidr.z}),
and a percentile vermemb.dueson (\code{eidr.p}).
}
\description{
Calculate the earned income dependence ratio and append it to the dataframe.
}
\details{
This metric shows how much of an organizationâ€™s total revenues come from earned income (program
service revenues, dues, assessments, profits from sales). High levels in this indicator are more dememb.duesrable
memb.duesnce that means that an organization is fairly self-sustaining with its own activities. Low values in this
indicator mean an organization is likely dependent on donations or investments for their revenues and thus more
vulnerable to the sentiments of donors or market forces. Note: computation of this metric is available to only
990 filers and not for 990-EZ filers. The default inputs use column names for variables available only to 990 filers.
}
\examples{
library( fiscal )
x1 <- rnorm( 1000,100,30 )
x2 <- rnorm( 1000,200,30 )
x3 <- rnorm( 1000,200,30 )
x4 <- rnorm( 1000,100,30 )
x5 <- rnorm( 1000,200,30 )
dat <- data.frame( x1, x2, x3, x4, x5 )

# specify own column names
d <- get_eidr( df=dat, prog.service.rev='x1', memb.dues='x2', royalties='x3', other.revenue='x4', total.revenue='x5', winsorize=0.98 )

head( d )

# run with default column names
dat_01 <- dat

colnames( dat_01 ) <- c( "F9_08_REV_PROG_TOT_TOT", "F9_08_REV_CONTR_MEMBSHIP_DUE", "F9_08_REV_OTH_ROY_TOT",
                         "F9_08_REV_MISC_OTH_TOT", "F9_08_REV_TOT_TOT" )


d <- get_eidr( dat_01 )

# coerce one column to factor
dat_01$F9_08_REV_MISC_OTH_TOT <- as.factor( dat_01$F9_08_REV_MISC_OTH_TOT )

d <- get_eidr( dat_01 )

# winsorize at 0.025 and 0.975 percentiles instead of 0.01 and 0.99
d <- get_eidr( df=dat, prog.service.rev='x1', memb.dues='x2', royalties='x3', other.revenue='x4', total.revenue='x5', winsorize = 0.95 )

d <- get_eidr( dat_01, winsorize = 0.95 )

# aggregate variables into single numerator and denominator
x.den <- x5 
x.num <- x1 + x2 + x3 + x4

dat_02 <- cbind( dat, x.den, x.num)

d <- get_eidr( dat_02, numerator = "x.num", denominator = "x.den" )

# using 990 data
data( part010810 )
d <- get_eidr( df = part010810 )

# now coerce one of the variables to numeric
part010810$F9_10_LIAB_ACC_PAYABLE_EOY <- as.character( part010810$F9_10_LIAB_ACC_PAYABLE_EOY )

d <- get_eidr( df = part010810 )

\dontrun{
## Errors ##
# incorrectly specify denominator
get_eidr( df = dat_02, prog.service.rev = 'x1', memb.dues = 'x2', royalties = 'x3', other.revenue = 'x4', 
          total.revenue = NULL, numerator = NULL, denominator = NULL, winsorize=0.98 )

# incorrectly specify numerator with conflicting arguments
get_eidr( df = dat_02, prog.service.rev = 'x1', memb.dues = 'x2', royalties = 'x3', other.revenue = 'x4', 
          total.revenue = NULL, numerator = 'x.num', denominator = 'x.den' , winsorize=0.98 )


# incorrectly specify denominator with conflicting arguments
get_eidr( df = dat_02, prog.service.rev = 'x1', memb.dues = 'x2', royalties = 'x3', other.revenue = 'x4', 
          total.revenue = 'x5', numerator = NULL, denominator = 'x.den' , winsorize=0.98 )  

# supplying no arguments for the numerator
get_eidr( df = dat_02, prog.service.rev = NULL, memb.dues = NULL, royalties = NULL, other.revenue = NULL, 
          total.revenue = 'x5', numerator = NULL, denominator = NULL , winsorize=0.98 )  

# supplying no arguments for the denominator
get_eidr( df = dat_02, prog.service.rev = 'x1', memb.dues = 'x2', royalties = 'x3', other.revenue = 'x4', 
          total.revenue = NULL, numerator = NULL, denominator = NULL , winsorize=0.98 )  

# supplying argument for one of the parameters in the numerator that is greater than length 1
get_eidr( df = dat_02, prog.service.rev = 'x1', memb.dues = 'x2', royalties = 'x3', other.revenue = 'x4', 
          total.revenue = c( 'x5', 'x6' ), numerator = NULL, denominator = NULL, winsorize=0.98 )

get_eidr( df = dat_02, prog.service.rev = NULL, memb.dues = NULL, royalties = NULL, other.revenue = NULL, 
          total.revenue = NULL, numerator = c( 'x5', 'x6' ), denominator = 'x.den' , winsorize=0.98 )  
}

}
