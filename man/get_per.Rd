% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get-per.R
\name{get_per}
\alias{get_per}
\title{Program Efficiency Ratio}
\usage{
get_per( df, 
pse = c( "F9_09_EXP_TOT_PROG", "F9_10_ASSET_TOT_EOY" ), 
total.expense = "F9_01_EXP_TOT_CY",
winsorize = 0.98 )
}
\arguments{
\item{df}{A \code{data.frame} containing the required field for computing the metric. The metric will be appended to this dataset.}

\item{pse}{A character string indicating the column name for program service expenses (On 990: Part 9, Line 25B; On EZ: Pt II, Line 25B).}

\item{total.expense}{A character string indicating the column name for total expenses (On 990: Part 1, Line 18(B); On EZ: Part 1, Line 17).}

\item{winsorize}{The winsorization value (between 0 and 1), defaults to 0.98 which winsorizes at 99th and 1st percentile values.}
}
\value{
Object of class \code{data.frame}: the original dataframe appended with the program efficiency ratio (\code{per}),
a winsorized version (\code{per.w}), a standardized z-score version (\code{per.z}),
and a percentile version (\code{per.p}).
}
\description{
Calculate the program efficiency ratio and append it to the dataframe.
}
\details{
The program efficiency ratio measures the percentage of expenses that a nonprofit organization is
spending on its core mission. High values in this ratio indicate that more of an organization's expenses
are going towards its core mission or program services while a lower number indicates that an organization's
expenses are comprised of other things like management or fundraising. Charity Navigator generally gives
the highest rankings to those organizations whose ratio of program expenses is 85\% or higher of their total
expenses. Other agencies, such as the Better Business Bureauâ€™s Wise Giving Alliance, recommend a ratio of
65\% or higher. Note: computation of this metric is available to both 990 and 990-EZ filers.
}
\examples{
library( fiscal )
x1 <- rnorm( 1000, 100, 30 )
x2 <- rnorm( 1000, 200, 30 )
x2[ c( 15, 300, 600 ) ] <- 0

dat <- data.frame( x1, x2 )

# specify own column names
d <- get_per( df = dat, pse = "x1", total.expense = "x2" )

head( d )

# run with default column names
x3 <- rnorm( 1000, 100, 30 )
x3[ seq( from = 1, to = 1000, 50 ) ] <- NA
x3[ seq( from = 2, to = 998, 53 ) ] <- 0


dat_01 <- data.frame( x1, x2, x3 )

colnames( dat_01 ) <- c( "F9_09_EXP_TOT_PROG", "F9_10_ASSET_TOT_EOY", "F9_01_EXP_TOT_CY" )

d <- get_per( dat_01 )

# coerce one column to factper
dat_01$F9_09_EXP_TOT_PROG <- as.factor( dat_01$F9_09_EXP_TOT_PROG )

d <- get_per( dat_01 )

# winsorize at 0.025 and 0.975 percentiles instead of 0.01 and 0.99
d <- get_per( df = dat, pse = "x1", total.expense = "x2", winsorize = 0.95 )

d <- get_per( dat_01, winsorize = 0.95 )


# using 990 data
data( part010810 )
d <- get_per( df = part010810 )

# now coerce one of the variables to numeric
part010810$F9_09_EXP_TOT_PROG <- as.character( part010810$F9_09_EXP_TOT_PROG )

d <- get_per( df = part010810 )

\dontrun{
## Errors ##

# numerator not specified
d <- get_per( df = dat, pse = NULL, total.expense = "x2" )

# denominator not specified
d <- get_per( df = dat, pse = "x1", total.expense = NULL )

# neither numerator nor denominator specified
d <- get_per( df = dat, pse = NULL, total.expense = NULL )

# column names vector not of correct length
d <- get_per( df = dat, pse = c("e","b","c"), total.expense = "e")

# column names vector not of correct length
d <- get_per( df = dat, pse = "e", total.expense = c( "e", "b", "c") ) 
}
}
